---
- name: Setup Development Environment
  hosts: localhost
  become: yes
  vars:
    user_name: "{{ user_name }}"
  tasks:
    - name: Update apt repository and cache
      apt:
        update_cache: yes

    - name: Install dependencies for adding repositories and unzip
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - unzip
        state: present

    # Docker Installation
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user in group Docker
      command: sudo usermod -aG docker {{ user_name }}
      become: yes

    # JDK 21 Installation
    - name: Install OpenJDK 21
      apt:
        name: openjdk-21-jdk
        state: present

    # nvm Installation
    - name: Download and install nvm
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
      args:
        creates: /root/.nvm

    - name: Source nvm script
      shell: |
        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
      args:
        executable: /bin/bash

    # Node.js Installation using nvm
    - name: Install Node.js using nvm
      shell: |
        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/.nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install --lts
      args:
        executable: /bin/bash

    # Yarn Installation
    - name: Install Yarn using npm
      shell: |
        export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/.nvm")"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        npm install -g yarn
      args:
        executable: /bin/bash

    # Maven Installation
    - name: Install Maven
      apt:
        name: maven
        state: present

    # Oracle Instant Client Installation
    - name: Install libaio1 dependency
      apt:
        name: libaio1
        state: present

    - name: Download Oracle Instant Client
      get_url:
        url: https://download.oracle.com/otn_software/linux/instantclient/213000/instantclient-basic-linux.x64-21.3.0.0.0.zip
        dest: /tmp/instantclient.zip
        headers:
          Cookie: oraclelicense=accept-securebackup-cookie

    - name: Unzip Oracle Instant Client
      unarchive:
        src: /tmp/instantclient.zip
        dest: /opt
        remote_src: yes
        creates: /opt/instantclient_21_3

    - name: Create symbolic links for Oracle Instant Client
      file:
        src: /opt/instantclient_21_3/{{ item }}
        dest: /usr/lib/{{ item }}
        state: link
      loop:
        - libclntsh.so
        - libclntsh.so.21.1
        - libocci.so
        - libocci.so.21.1

    - name: Update LD_LIBRARY_PATH
      lineinfile:
        path: /etc/environment
        line: 'LD_LIBRARY_PATH=/opt/instantclient_21_3:${LD_LIBRARY_PATH}'
        create: yes

    - name: Source environment variables
      shell: source /etc/environment
      args:
        executable: /bin/bash
